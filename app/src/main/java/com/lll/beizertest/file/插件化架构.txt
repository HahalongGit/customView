插件化架构：

一般把一个大的项目分成一个主的apk和一个从的apk。
主apk安装了，从apk放在服务器上，需要的时候下载启动。主要可以减小apk大小，方便用户更新。

插件化实现：
开源的DL插件化实现方式。
插件化要解决的问题：
1.如何解决一个没有在Manifanifest.xml 中注册的Activity 启动报错的问题。
2.

解决没有在Mainfanifest.xml中配置的Activity启动报错：

首先：java的动态代理
1.MVP架构
  P绑定V，P绑定V,每个方法都需要判断V是否是空，采用动态代理，在代理中判断View是否是空
2.数据库懒加载使用静态代理。用到了才去加载。
3.xUtils 源码用到了动态代理。
  setOnClikcListener setOnTouchListener 等

静态代理：
代替你去办理某件事。（去银行办理业务，业务员（代理）帮你办理，这个业务员专门处理这个事，其他人都找她办理，她熟悉，速度快）
业务员和办理业务的其他人都实现指定的某个方法，使用的时候采用替换的方式。传递一个办理的对象，调用其方法。

静态代理如果代理很多功能可能就会产生很多重复的代码。比如:业务员代理你办理很多功能的事情，每次都要重复对
机器进行一些操作。所以提出了动态代理，来处理这个问题。

动态代理：
java本身提供了动态代理的机制。
Proxy 类 以及一个InvocationHandler接口
Proxy.newProxyInstance();调用方法返回一个代理的对象，用来处理调用代理的方法。
方法有三个参数：
第一个参数是代理对象的接口类对应的ClassLoader
第二个参数是一个接口类数组，对应代理类接口的数组(new Class<?>[]{接口类.class})或者对象.getClass().getInterfaces()获取接口数组
第三个参数是InvocationHandler 的实现对象，InvocationHandler 内部处理了代理调用。构造方法要传递一个代理实现类的对象。

动态代理，传递功能的对象，直接调用对象任意的方法，减少重复的步骤和代码。

JDK 动态代理源码分析：
Proxy.newProxyInstance()

插件化开发中需要知道的 Activity 的启动流程：（需要自己研究几次启动的流程掌握源码的大概逻辑）

从startActivty开始，到 ActivityManagerService 的startActivty(); 然后到..
校验启动模式等，启动一个新的Activity前调用当前Activity的onPause方法。最后通过app.thread 获取到一个ActivityThread 对象操作启动Activity
ScheduleResumeXXX
在ActivityThread 和 ActivityStack 中执行了一些Activity的生命周期方法如onPause、onCreate.等。

最后调用了ActivityThread：scheduleLaunchAchicity()
ActivityThread 类
handleLaunchActivity()启动，activity的 onCreate方法调用
//Activity a = performLaunchActivity(r, customIntent); 创建
什么地方判断在AndroidManifest.xml 中注册？

Hook IActivityManager接口 ，用它的代理去过Activity检测，最后创建Activity的时候在换回来，

绕过AndroidManifest.xml 检测，启动没有注册的apk的Activity 并且传递参数到对应的Activity 中。
1.启动一个Activity，这个Activity没有被注册
2.类还需要加载，插件的Activity的类是在插件中。
3.还需要再加资源

如果Hook,要基于一个接口，在这里就要找一个接口。我们Hook IActivityManager,做一个自己的实现。
要获取一个IActivityManager 的实现，源码中 getDefault().getXXX返回一个实现

拦截启动：（api 25 以上没有IActivityManager 接口，也没有其他对应的代码）
1.获取ActivityManagerNative里面的gDefault
2.获取gDefault 中的mInstance属性
3.报错是因为这个Activity没有注册，用一个注册的Activity占坑去检测，新建一个ProxyActiivty去处理
4.换回来Intent hookActivityManager 里面的mH是一个handler
5.获取ActivityThread
6.获取ActivityThread中mH
7.hook handleLaunchActivity();

8.Activity 继承 AppCompatActivity 会异常退出！怎么处理？

9.启动后加载资源，和热修复一样，查看系统是如何加载资源的。

