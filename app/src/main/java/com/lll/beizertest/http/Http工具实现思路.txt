实现一个Http工具的封装，方便后续代码中修改替换网络框架。

采用面向接口的思想：
1.定义个规范
  IHttpEngine 定义出Http中要实现的功能方法。
2.不同的网络框架实现一个不同的IHttpEngine 的子类，方便替换（如使用Okhttp 或者 xUtils3 实现两个引擎）
3.写一个请求的回调。
  处理 任何网络处理的成功和失败的请求
4.书写一个HttpUtils 工具 。
   HttpUtils 采用接口的方式，设置默认的网络操作，比如设置Okhttp为默认的网络请求框架。
   采用链式调用的方式传递参数：设置url、其他请求参数、设置请求方式（GET/POST）、设置一个新的IHttpEngine引擎、添加自定义回调等，最后调用
   执行方法，执行方法中设置参数，判断调用的方法类型并调用引擎的方法执行请求操作。
5.这样写的好处
  对于有不同网络框架的项目，这样我们可以随意的切换网络框架，只要在调用的时候设置不同的引擎就可以。
  定义的链式调用，简化了调用方式。